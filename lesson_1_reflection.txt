How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    If there is some syntactic arror or a small word misspelled then its easy to find bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Sometime you want to use your previous work to save time and also because that was more efficent so it can help in that way.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros-I will save only after I have done some significant(logical) changes. Also this will not create bunch of version of that file nor too much less versions.
It will help me to find previous versions and also to solve the bugs.
Cons-If bymistake i forget to save the new version then there will be problem. Or if i forget and will save very late then too uch diff between two files
so tough to find diff between them. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

May be due to fact that google docs dont work on multiple files.  

How can you use the commands git log and git diff to view the history of files?

git log show all the previous commits. So you can view all the history. git diff show you diff between any two versions.

How might using version control make you more confident to make changes that
could break something?

It give freedom to change the code to try different things.

Now that you have your workspace set up, what do you want to try using Git for?


Want to use it for all my files of programming.